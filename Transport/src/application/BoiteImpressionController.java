package application;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;

import java.io.IOException;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ResourceBundle;

import DataBase.DAOfactory;
import DataBase.DepartDAO;
import DataBase.LigneDAO;
import DataBase.PassagerDAO;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.ComboBox;

import javafx.scene.control.DatePicker;
import javafx.stage.Stage;
import metiers.Depart;
import metiers.Ligne;
import outils.Outils;

public class BoiteImpressionController implements Initializable{
	ObservableList<Ligne> listeLigne=FXCollections.observableArrayList();
	ObservableList<Depart> listeDepart=FXCollections.observableArrayList();
	public static boolean estvide;
	DAOfactory DAOF=new DAOfactory();
	LigneDAO ligneDAO=DAOF.getLigneDAO();
	DepartDAO departDAO=DAOF.getDepartDAO();
	@FXML
	private DatePicker date;
	@FXML
	private ComboBox<Ligne> ligne;
	@FXML
	private ComboBox<Depart> depart;
	@FXML
	private Button btnFerme;
	@FXML
	private Button btnOk;

	// Event Listener on ComboBox[#ligne].onAction
	@FXML
	public void surLigne(ActionEvent event) {
		
	}
	// Event Listener on ComboBox[#depart].onAction
	@FXML
	public void surDepart(ActionEvent event) {
		Ligne sligne=ligne.getSelectionModel().getSelectedItem();
		
		if(sligne!=null) {
			listeDepart=sligne.getListDepart();
			depart.setItems(listeDepart);
		}
		
	}
	// Event Listener on Button[#btnFerme].onAction
	@FXML
	public void ferme(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnOk].onAction
	@FXML
	public void ok(ActionEvent event) {
		Long idLigne=ligne.getSelectionModel().getSelectedItem().getId();
		Long idDepart=depart.getSelectionModel().getSelectedItem().getId();
		String sdate=Outils.DateEnChaine(date.getValue());
		if(idLigne!=null&&idDepart!=null&&sdate!=null) {
			ListePassagerController.idLigne=idLigne;
			ListePassagerController.idDepart=idDepart;
			ListePassagerController.date=sdate;
			DAOfactory DAOF=new DAOfactory();
			PassagerDAO passagerDAO=DAOF.getPassagerDAO();
			ResultSet Rs=passagerDAO.findPassagerByDateAndLigne(sdate,idLigne,idDepart);
			try {
				if(Rs.next()) {
					try {
						Parent parent=FXMLLoader.load(getClass().getResource("ListePassager.fxml"));
						Scene scene=new Scene(parent,960,700);
						Stage stage=new Stage();
						stage.setScene(scene);
						stage.setTitle("Impression de billet");
						stage.setResizable(false);
						stage.show();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}else {
					Outils.info("Aucun passager trouvé");
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		}else {
			Outils.erreur("veuillez remplire toutes les inforamtions");
		}
	}
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		ResultSet rs=ligneDAO.findAll();
		try {
			listeLigne.clear();
			while(rs.next()) {
				listeLigne.add(ligneDAO.find(rs.getLong("ID_ligne")));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ligne.setItems(listeLigne);
		ligne.getSelectionModel().selectFirst();
		
		depart.setOnMouseClicked(event->{
			 Ligne selectedLigne = ligne.getSelectionModel().getSelectedItem();

			    if (selectedLigne != null) {
			        ObservableList<Depart> departList = selectedLigne.getListDepart();
			        if (departList != null) {
			        	depart.setItems(departList);
			            
			        } else {
			        	Outils.info("Cette ligne n'a pas de départ correspondant");
			        }
			    }
		});
	}
}
